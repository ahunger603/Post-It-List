@model IEnumerable<PostItList.Models.ToDoItem>
@{
    ViewData["Title"] = "List";
}
<h2>@ViewData["Title"].</h2>
<h3>@ViewData["Message"]</h3>

<p>Use this area to provide additional information.</p>
<style>
    .custom {
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        font-size: 30px;
    }

    .list-custom {
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        font-size: large;
    }
</style>
<table class="table" id="myTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DueDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Completed)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            @**class for better css *@
            <tr class="todo-item" data-guid="@item.Id">
                <td contenteditable="false">
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td contenteditable="false">
                    @item.CreatedDate.Month/@item.CreatedDate.Day/@item.CreatedDate.Year
                </td>
                <td contenteditable="false">
                    @if(item.DueDate == default(DateTime)) { 
                        <p></p>
                    }
                    else
                    {
                        <p>@item.DueDate.Month/@item.DueDate.Day/@item.DueDate.Year </p>
                    }
                </td>
                <td contenteditable="false">
                    @Html.DisplayFor(modelItem => item.Completed)
                </td>
                <td contenteditable="false">
                    <button type="button" class="glypicon glyphicon-pencil" id="update" title="Edit item">Edit</button>
                    <button type="button" class="glyphicon glyphicon-remove" id="delete" title="Delete Item" />

                </td>
            </tr>
        }
    </tbody>
</table>

@* Intro jumbotron*@
<div class="jumbotron">
    <h1>Welcome!</h1>
    <p>Click here to begin adding tasks to your list</p>
    <p><a class="btn btn-primary btn-lg" href="#" role="button">Add items</a></p>
</div>

@* Actual add panel*@
<div class="panel panel-primary hidden" id="add-panel">
    <div class="panel-heading">
        <h3 class="panel-title">New Task</h3>
    </div>
    <div class="panel-body">
        <div class="input-group-lg ">
            <input type="text" class="form-control" id="task-title" placeholder="Task Title">
        </div>
        <button type="button" class="btn btn-default btn-lg date-option">
            <span class="glyphicon glyphicon-calendar" aria-hidden="true"></span> Due Date
        </button>
    </div>
    <div class="panel-body">
        <div class="input-group-lg date-panel hidden">
            <label for="datepicker">Due Date</label>
            <input type="text" id="datepicker" class="form-control">
        </div>
        <div class="panel-footer">
            <button type="button" class="btn btn-default btn-lg" id="add-button">
                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add to List
            </button>
        </div>

    </div>
</div>



@section Scripts {
    <script>

        //attach listener for enter/button click

        //button click
        $(document).ready(function () {

            $("#datepicker").datepicker();
            $('.btn-primary').click(hideAddInfo);
            $('#add-button').click(addItem);


            $('.date-option').click(function () {
                $('.date-panel').toggleClass('hidden');
                console.log("Click called");
            })
    

            function addItem() {
                var taskTitle = $('#task-title').val();
                if (taskTitle === '') {
                    return;
                }
                var currentDate = $('#datepicker').datepicker('getDate');
                if (currentDate == undefined) {
                    currentDate = "0001-01-01T00:00:00"
                }
                else {

                    currentDate = currentDate.toISOString();

                }
                var addedTask = {
                    "Title": taskTitle,
                    "Id": "00000000-0000-0000-0000-000000000000",
                    "CreatedDate": "0001-01-01T00:00:00",
                    "DueDate": currentDate,
                    "Completed": false
                };
                $.post({
                    url: 'AddToDo',
                    success: function (data) {
                        //Remove in production
                        appendTask(data);
                        console.log(data)
                    },
                    error: function () {
                        //Remove in production
                        console.log(arguments);
                    },
                    dataType: 'json',
                    data: JSON.stringify(addedTask)
                })
            }

            function appendTask(guid) {
                var taskTitle = $('#task-title').val();
                var dueDate = $('#datepicker').datepicker('getDate');
                if (dueDate == undefined || dueDate == "0001-01-01T00:00:00") {
                    dueDate = "";
                }
                else {
                    dueDate =
                        dueDate.getMonth()+1 + '/' +
                        dueDate.getDate() + '/' +
                        dueDate.getFullYear();

                }
                var d = new Date();
                var createdDate = (d.getMonth() + 1) + '/' + d.getDate() + '/' + d.getFullYear();

                var output = "<tr class='todo-item' data-guid=" + guid + "> <td contenteditable='false'>" + taskTitle + "</td> <td contenteditable='false'>" + createdDate +
                    "</td> <td contenteditable='false'>" + dueDate + "</td> <td contenteditable='false'><input class='check-box' disabled='disabled' type='checkbox'> </td>" +
                    "<td contenteditable='false'>" +
                    "<button type='button' class='glypicon glyphicon-pencil' id='update' title= 'Edit item' > Edit</button >" +
                    "<button type='button' class='glyphicon glyphicon-remove' id='delete' title='Delete Item' /> </td >";
                
                $('tbody').append(output);
                $('#datepicker').val('');
                $('.date-panel').toggleClass('hidden');
                $('#task-title').val('');

            }

            //credit to Selvakumar Arumugam for removing hidden class
            //https://stackoverflow.com/questions/10148660/javascript-hide-a-div-at-startup-load
            function hideAddInfo() {
                $('.jumbotron').remove();
                $('#add-panel').removeClass('hidden');
            }



            //credit to Paolo Bergantino https://stackoverflow.com/questions/979662/how-to-detect-pressing-enter-on-keyboard-using-jquery
            $('.form-control').keypress(function (e) {
                if (e.which == 13) {
                    addItem();
                }

            });


            //credit to isherwood https://stackoverflow.com/questions/23249130/delete-table-row-using-jquery
            $(document).on('click', 'button.glyphicon-remove', function () {
                var newTitle = $(this).closest('tr').find('td:eq(0)').text();
                console.log(newTitle);
                var newCreatedDate = $(this).closest('tr').find('td:eq(1)').text();
                console.log(newCreatedDate);
                var newDueDate = $(this).closest('tr').find('td:eq(2)').text();
                console.log(newDueDate);
                var newCompleted = $(this).closest('tr').find('td:eq(3)').text();
                console.log(newCompleted);
                var id = $(this).closest('tr').attr('data-guid');
                console.log(id);
                //var update = { "Title": newTitle, "Id": id, "CreatedDate": newCreatedDate, "DueDate": newDueDate };
                $.ajax({
                    type: "DELETE",
                    url: "Delete",
                    contentType: "application/json",
                    data: JSON.stringify(id)
                });
                $(this).closest('tr').remove();
                return false;

            });


            $('.glyphicon-pencil').click(function () {
                var currentTD = $(this).parents('tr').find('td');
                if ($(this).html() == 'Edit') {
                    currentTD = $(this).parents('tr').find('td');
                    $.each(currentTD, function () {
                        $(this).prop('contenteditable', true)

                    });

                } else {
                    $.each(currentTD, function () {
                        $(this).prop('contenteditable', false)

                    });

                }

                $(this).html($(this).html() == 'Edit' ? 'Save' : 'Edit')



                var newTitle = $(this).closest('tr').find('td:eq(0)').text();
                console.log(newTitle);
                var newCreatedDate = $(this).closest('tr').find('td:eq(1)').text();
                console.log(newCreatedDate);
                var newDueDate = $(this).closest('tr').find('td:eq(2)').text();
                console.log(newDueDate);
                var newCompleted = $(this).closest('tr').find('td:eq(3)').text();
                console.log(newCompleted);
                var id = $(this).closest('tr').attr('data-guid');
                console.log(id);
                var update = { "Title": newTitle, "Id": id, "CreatedDate": newCreatedDate, "DueDate": newDueDate };
                $.ajax({
                    type: "PUT",
                    url: "Edit",
                    contentType: "application/json",
                    data: JSON.stringify(update)
                });


            });
        });
    </script>
}
